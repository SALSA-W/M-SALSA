package com.salsaw.msalsa;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.Page;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Upload;
import com.vaadin.ui.Upload.Receiver;
import com.vaadin.ui.Upload.SucceededEvent;
import com.vaadin.ui.Upload.SucceededListener;

public class HomePageView extends CustomComponent implements IHomePageView {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private Upload uploadInput;
	@AutoGenerated
	private Label titile;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HomePageView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		
		
		// Implement both receiver that saves upload in a file and
		// listener for successful upload
		class AligmentUploader implements Receiver, SucceededListener {
		    public File file;
		    
		    public OutputStream receiveUpload(String filename,
		                                      String mimeType) {
		        // Create upload stream
		        FileOutputStream fos = null; // Stream to write to
		        try {
		            // Open the file for writing.
		            file = new File("C:/" + filename);
		            fos = new FileOutputStream(file);
		        } catch (final java.io.FileNotFoundException e) {
		            new Notification("Could not open file<br/>",
		                             e.getMessage(),
		                             Notification.Type.ERROR_MESSAGE)
		                .show(Page.getCurrent());
		            return null;
		        }
		        return fos; // Return the output stream to write to
		    }

		    public void uploadSucceeded(SucceededEvent event) {
		        // TODO - start with align
		    	
		    	for (IHomePageListener listener: listeners)
		            listener.buttonClick(file);
		    }
		};
		
		AligmentUploader receiver = new AligmentUploader();
		
		uploadInput.setReceiver(receiver);
		uploadInput.addSucceededListener(receiver);

	}

	/* Only the presenter registers one listener... */
    List<IHomePageListener> listeners =
            new ArrayList<IHomePageListener>();

    @Override
    public void addListener(IHomePageListener listener) {
        listeners.add(listener);
    }

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setRows(2);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// titile
		titile = new Label();
		titile.setImmediate(false);
		titile.setWidth("-1px");
		titile.setHeight("-1px");
		titile.setValue("M-SALSA");
		mainLayout.addComponent(titile, 0, 0);
		mainLayout.setComponentAlignment(titile, new Alignment(48));
		
		// uploadInput
		uploadInput = new Upload();
		uploadInput.setCaption("Upload align input");
		uploadInput.setImmediate(false);
		uploadInput.setWidth("-1px");
		uploadInput.setHeight("-1px");
		mainLayout.addComponent(uploadInput, 0, 1);
		mainLayout.setComponentAlignment(uploadInput, new Alignment(48));
		
		return mainLayout;
	}

}
